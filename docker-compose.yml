version: '3'
services:
  rest:
    build: ./Server/REST
    restart: always
    ports:
      - "80:80"
      - "443:443"
    networks:
      - overlay
    depends_on:
      - db_server

  authapp:
    build: ./Server/AUTHAPP
    ports:
      - "8080"
    networks:
      - overlay
    depends_on:
      - redis

  webapp:
    build: ./Server/WEBAPP
    ports:
      - "8081"
    networks:
      - overlay
    depends_on:
      - redis

  socketclient:
    build: ./Server/SOCKETCLIENT
    ports:
      - "8083"
    networks:
      - overlay

  api_mongo:
    container_name: api_mongo
    restart: always
    build: ./BDD-CLOUD/api_mongo
    ports:
      - "3000:3000"
    depends_on:
      - mongo
    networks:
      - overlay

  mongo:
    container_name: mongo
    image: mongo
    volumes:
      - ./BDD-CLOUD/api_mongo/mongodata:/data/db
    ports:
      - "27017:27017"
    networks:
      - overlay

  mysql:
    container_name: mysql
    image: mysql
    ports:
      - "3306:3306" 
    volumes:
      - ./BDD-CLOUD/mysql/dump/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./BDD-CLOUD/mysql/data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: NightAdvisor
      MYSQL_USER: root
      MYSQL_PASSWORD: password
    networks:
      - overlay

  api_mysql:
    container_name: api_mysql
    restart: always
    build: ./BDD-CLOUD/api_mysql
    ports:
      - "3030:3030"
    depends_on:
      - mysql
    networks:
      - overlay

  reco:
    restart: always
    build: ./recommandation
    ports:
      - "8000"
    depends_on:
      - db_server
    networks:
      - overlay

  redis:
    restart: always
    image: redis
    ports:
      - "6379"
    networks:
      - overlay

networks:
  overlay:
